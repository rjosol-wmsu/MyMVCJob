@model RjWeb.Areas.Security.Models.UserModelView

@{
    ViewBag.Title = "Edit";
    Layout = "~/Views/Shared/_Layout.cshtml";
}


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
  
    <div class="form-horizontal">

        <header class="row content.header">

            <div class="col-md-6">
              
                
                
            </div>
            <div class="col-md-10 content-action ">
                <h3>Edit</h3>
                <a href="@Url.Action("Index")" class="btn btn-text">
                    <span class="glyphicon glyphicon-remove"></span> Cancel
                </a>

                <button type="submit" value="Save" class="btn btn-success">
                    <span class="glyphicon glyphicon-ok"></span> Update
                </button>
            </div>

        </header>
        <hr />

  


        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.Id)

        <div class="form-group">
            @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Age, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Age, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Age, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.Gender, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <fieldset>
                    @Html.RadioButtonFor(model => model.Gender, "Male", false)Male
                    @Html.RadioButtonFor(model => model.Gender, "Female", false)Female
                </fieldset>
                @Html.ValidationMessageFor(model => model.Gender, "", new { @class = "text-danger" })
            </div>
        </div>

    </div>


}




@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
